<single_instance_cd>
  <!-- "Take One"-variant with 2 after-transitions -->
  <delta>1 ms</delta>
  <statechart>
    <semantics
      big_step_maximality="take_one"
      input_event_lifeline="whole"
      hierarchical_priority="source_parent"
      same_source_priority="explicit"
      />
    <datamodel>
      time = 0;
      checkStartTime = func {
        if (time == 0) time = 30;
      };
    </datamodel>
    <inport name="in">
      <event name="start"/>
      <event name="stop"/>
      <event name="increase_time"/>
      <event name="door_opened"/>
      <event name="door_closed"/>
    </inport>
    <outport name="out">
      <event name="micro_on"/>
      <event name="micro_off"/>
      <event name="set_time"/>
      <event name="ping"/>
    </outport>
    <root initial="NotRunning">
      <state id="Running">
        <onentry> <raise port="out" event="micro_on"/> </onentry>
        <onexit> <raise port="out" event="micro_off"/> </onexit>
        <transition port="in" event="stop" target="../NotRunning"/>
        <transition after="1 s" cond="time > 1" target=".">
          <code> time -= 1; </code>
          <raise port="out" event="set_time">
            <param expr="time"/>
          </raise>
        </transition>
        <transition port="in" event="increase_time" target=".">
          <code> time += 10; </code>
            <raise port="out" event="set_time">
              <param expr="time"/>
            </raise>
        </transition>
        <transition after="1 s" cond="time == 1" target="../NotRunning">
          <code> time -= 1; </code>
          <raise port="out" event="set_time">
            <param expr="time"/>
          </raise>
        </transition>
      </state>
      <state id="NotRunning">
        <transition port="in" event="start" target="../Running">
          <code> checkStartTime(); </code>
          <raise port="out" event="set_time">
            <param expr="time"/>
          </raise>
        </transition>
        <transition port="in" event="stop" target=".">
          <code> time = 0; </code>
          <raise port="out" event="set_time">
            <param expr="time"/>
          </raise>
        </transition>
        <transition port="in" event="increase_time" target=".">
          <code> time += 10; </code>
            <raise port="out" event="set_time">
              <param expr="time"/>
            </raise>
        </transition>
      </state>
    </root>
  </statechart>
</single_instance_cd>